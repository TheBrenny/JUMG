Example '.jumg' file

No lines will be interpreted unless the the interpreter sees trigger characters
at the very start of a line, and at the end. Due to the BrennyPress compression
algorithm, there is a chance for the first letter in the keyspace to be created
at the end of a line when uncompressing.

If the interpreter sees three consecutive triggers it will instantiate the
object associated with that name. A sample interpreter has been created for use
of any game maker, however one can make their own interpreter simply by
implementing the 'Interpreter' interface.

If one wants to instantiate an object but must provide parameters to the
constructor, the interpreter SHOULD read each parameter in order. This means
that there is no need to set data. But then again, this is all up to how the
game is made... 

NOTE: Depending on how the interpreter is created, the interpreter WILL
instantiate everything it sees. This is the exact case of the FileInterpreter
located within this package. USE WITH CARE. You don't want to go instantiating
another Frame or Display!

NOTE: Everything mentioned is actually pointless. You can do file interpreting
however you want. There are no rules as to how it should be done, however, the
JUMG way is just a baseline.

A list of what each character grouping means is below. Note that character
groupings go by Greedy First; which means it'll match $$$ before $:
 - $..$	| Start/End/Split mandatory data.					| $..$What's mandatory$..$Where it's at$..$
 - $$$	| Start/End/Split object instance reading.			| $$$Object to instantiate$$$reference$$$
 - $$	| Start/End parameter reading for an object.		| $$Reference to object or creation of object$$
 - $(3)	| Start/End/Split object reading.					| $Reference.to set$Set to this$
 - $(2)	| Perform a function.								| $Function to perform$ (Such as F.)
 - P.	| Start reading a point.							| $$P.x coord$.$y coord$$ (where $.$ splits between the two coords)
 - I.	| Get a buffered image from the Images class.		| $$I.IMAGE.NAME$$ (Where a '.' is a '_')
 - F.	| Start reading a file relative to the set path.	| $$F.File location$$ (Where $.$ is a '/')

$..$Images$..$com.brennytizer.wom.utils.Images$..$

$$$com.brennytizer.jumg.utils.Sprite$$$WizardGood$$$
$$I.ENTITY.MAP$$
$$1$$
$$0$$
$$32$$
$$32$$
$$$END$$$

$F.inventory1.jumg$

$$$com.brennytizer.wom.entities.NpcInv$$$SpellInv$$$
$$Wand$$
$$FireScroll$$
$$WaterScroll$$
$$WindScroll$$
$$$END$$$

$$$com.brennytizer.wom.entities.Wizard$$$SpellNPC$$$
$$Spell.Shop$$
$$WizardGood$$
$$SpellInv$$
$$P.320$640$$
$$$END$$$
